2020-11-21 18:55:24,902 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件register.yaml
2020-11-21 18:55:24,909 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件register_email.yaml
2020-11-21 18:55:24,924 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_huasheng_number.yaml
2020-11-21 18:55:24,926 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_huasheng_number1.yaml
2020-11-21 18:55:24,927 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_goods_kinds_num.yaml
2020-11-21 18:55:24,929 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_cut_btn.yaml
2020-11-21 18:55:24,932 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_add_btn.yaml
2020-11-21 18:55:24,933 INFO [admin] [read_yaml_sigle.py(read_yaml_sigle:12)] - 读取单个参数列表的，参数化文件cart_sub_price.yaml
2020-11-21 18:55:24,945 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件login11.yaml
2020-11-21 18:55:24,962 INFO [admin] [server_bat.py(__init__:14)] - 连接远程计算机，ip192.168.128.128,用户名bian,密码123456
2020-11-21 18:55:24,962 INFO [admin] [server_bat.py(run_bat_file:32)] - 执行命令：文件clear_session.bat，清理服务器缓存
2020-11-21 18:55:25,089 INFO [admin] [get_driver.py(get_web_driver:14)] - 火狐浏览器驱动
2020-11-21 18:55:31,827 INFO [admin] [base.py(__init__:19)] - 正在初始化driver对象<selenium.webdriver.chrome.webdriver.WebDriver (session="d3e6f7f3d09bd3221cbd95276de63167")>
2020-11-21 18:55:31,828 INFO [admin] [base.py(__init__:19)] - 正在初始化driver对象<selenium.webdriver.chrome.webdriver.WebDriver (session="d3e6f7f3d09bd3221cbd95276de63167")>
2020-11-21 18:55:31,829 INFO [admin] [page_login.py(page_login:65)] - 调用组合业务登录方法，登录用户名为1234@qq.com,密码123456,验证码8888
2020-11-21 18:55:31,829 INFO [admin] [base.py(base_click_element:30)] - 点击元素('partial link text', '登录')
2020-11-21 18:55:31,829 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', '登录')
2020-11-21 18:55:36,226 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#username')，输入1234@qq.com
2020-11-21 18:55:36,226 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#username')
2020-11-21 18:55:36,235 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#username')
2020-11-21 18:55:36,284 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#password')，输入123456
2020-11-21 18:55:36,284 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#password')
2020-11-21 18:55:36,293 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#password')
2020-11-21 18:55:36,347 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#verify_code')，输入8888
2020-11-21 18:55:36,348 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#verify_code')
2020-11-21 18:55:36,356 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#verify_code')
2020-11-21 18:55:36,412 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.J-login-submit')
2020-11-21 18:55:36,412 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.J-login-submit')
2020-11-21 18:55:36,449 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.ecsc-logo')
2020-11-21 18:55:36,450 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.ecsc-logo')
2020-11-21 18:55:46,450 INFO [admin] [test002_cart.py(test01_cart_empty:40)] - 验证无商品时购物车为空
2020-11-21 18:55:46,451 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.c-n')
2020-11-21 18:55:46,453 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.c-n')
2020-11-21 18:55:50,643 INFO [admin] [base.py(base_get_element_values:66)] - 获取元素('css selector', '.shopcar_empty')属性style的值
2020-11-21 18:55:50,643 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.shopcar_empty')
2020-11-21 18:55:50,667 ERROR [admin] [test002_cart.py(test01_cart_empty:45)] - 断言失败:assert False
 +  where False = <bound method PageCart.page_cart_if_empty of <page.page_cart.PageCart object at 0x00000237104C9460>>()
 +    where <bound method PageCart.page_cart_if_empty of <page.page_cart.PageCart object at 0x00000237104C9460>> = <page.page_cart.PageCart object at 0x00000237104C9460>.page_cart_if_empty
 +      where <page.page_cart.PageCart object at 0x00000237104C9460> = <script.test002_cart.TestCart object at 0x000002370F2E8E20>.cart
2020-11-21 18:55:50,670 INFO [admin] [base.py(base_get_screenshot:53)] - 正在截图,截图为C:\Users\bty\Desktop\实战阶段资料\Web项目\WEB自动化测试用例代码\WEB项目自动化代码\image\test002_cart-2020_11_21 18_55_50.png
2020-11-21 18:55:51,000 INFO [admin] [base.py(__base_write_img:59)] - 正在将截图test002_cart-2020_11_21 18_55_50.png写入报告中
2020-11-21 18:55:51,000 INFO [admin] [base.py(__base_write_img:61)] - 打开文件
2020-11-21 18:55:51,001 INFO [admin] [test002_cart.py(test01_cart_empty:48)] - 清空购物车,并返回首页
2020-11-21 18:55:51,002 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.checkCartAll')
2020-11-21 18:55:51,020 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '#removeGoods')
2020-11-21 18:55:51,020 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#removeGoods')
2020-11-21 18:55:51,061 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.logo')
2020-11-21 18:55:51,062 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.logo')
2020-11-21 18:55:59,550 INFO [admin] [test002_cart.py(test01_cart_empty:40)] - 验证无商品时购物车为空
2020-11-21 18:55:59,550 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.c-n')
2020-11-21 18:55:59,551 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.c-n')
2020-11-21 18:56:06,173 INFO [admin] [base.py(base_get_element_values:66)] - 获取元素('css selector', '.shopcar_empty')属性style的值
2020-11-21 18:56:06,174 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.shopcar_empty')
2020-11-21 18:56:06,189 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.logo')
2020-11-21 18:56:06,190 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.logo')
2020-11-21 18:56:08,923 INFO [admin] [test002_cart.py(test02_add_huasheng_to_cart:54)] - 添加花生到购物车
2020-11-21 18:56:08,924 INFO [admin] [base.py(base_click_element:30)] - 点击元素('xpath', '//ul[@id="navitems"]/li[3]/a')
2020-11-21 18:56:08,924 INFO [admin] [base.py(base_find_element:24)] - 查找元素('xpath', '//ul[@id="navitems"]/li[3]/a')
2020-11-21 18:56:08,998 INFO [admin] [base.py(base_get_text:43)] - 获取元素('xpath', "//a[@href = '/index.php/Home/Goods/goodsInfo/id/99.html']/../../div[4]/a")的文本信息
2020-11-21 18:56:08,999 INFO [admin] [base.py(base_find_element:24)] - 查找元素('xpath', "//a[@href = '/index.php/Home/Goods/goodsInfo/id/99.html']/../../div[4]/a")
2020-11-21 18:56:13,857 INFO [admin] [test002_cart.py(test03_modify_cart_huasheng_num:97)] - 修改购物车中商品数量
2020-11-21 18:56:13,857 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '.wi43')，输入0
2020-11-21 18:56:13,858 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.wi43')
2020-11-21 18:56:13,934 INFO [admin] [test002_cart.py(test03_modify_cart_huasheng_num:97)] - 修改购物车中商品数量
2020-11-21 18:56:13,935 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '.wi43')，输入1
2020-11-21 18:56:13,935 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.wi43')
2020-11-21 18:56:13,983 INFO [admin] [test002_cart.py(test04_modify_huasheng_num:141)] - 修改添加商品时的数量
2020-11-21 18:56:14,027 INFO [admin] [test002_cart.py(test04_modify_huasheng_num:141)] - 修改添加商品时的数量
2020-11-21 18:56:14,083 INFO [admin] [test002_cart.py(test04_modify_huasheng_num:141)] - 修改添加商品时的数量
2020-11-21 18:56:14,125 INFO [admin] [test002_cart.py(test04_modify_huasheng_num:141)] - 修改添加商品时的数量
2020-11-21 18:56:14,164 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart2.sql，恢复表
2020-11-21 18:56:14,190 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,190 INFO [admin] [test002_cart.py(test05_modify_goods_kinds_number:194)] - 插入2件商品
2020-11-21 18:56:14,232 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart10.sql，恢复表
2020-11-21 18:56:14,264 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,264 INFO [admin] [test002_cart.py(test05_modify_goods_kinds_number:194)] - 插入10件商品
2020-11-21 18:56:14,299 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart19.sql，恢复表
2020-11-21 18:56:14,320 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,320 INFO [admin] [test002_cart.py(test05_modify_goods_kinds_number:194)] - 插入19件商品
2020-11-21 18:56:14,354 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart20.sql，恢复表
2020-11-21 18:56:14,372 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,372 INFO [admin] [test002_cart.py(test05_modify_goods_kinds_number:194)] - 插入20件商品
2020-11-21 18:56:14,407 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart21.sql，恢复表
2020-11-21 18:56:14,428 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,428 INFO [admin] [test002_cart.py(test05_modify_goods_kinds_number:194)] - 插入21件商品
2020-11-21 18:56:14,477 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart2.sql，恢复表
2020-11-21 18:56:14,492 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,525 INFO [admin] [test002_cart.py(test07_check_cut_btn:240)] - 测试购物车中加减号的功能
2020-11-21 18:56:14,566 INFO [admin] [test002_cart.py(test07_check_cut_btn:240)] - 测试购物车中加减号的功能
2020-11-21 18:56:14,673 INFO [admin] [test002_cart.py(test09_check_sub_total_price:305)] - 测试小计功能
2020-11-21 18:56:14,673 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '.wi43')，输入1
2020-11-21 18:56:14,674 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.wi43')
2020-11-21 18:56:14,715 INFO [admin] [test002_cart.py(test09_check_sub_total_price:305)] - 测试小计功能
2020-11-21 18:56:14,716 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '.wi43')，输入2
2020-11-21 18:56:14,716 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.wi43')
2020-11-21 18:56:14,776 INFO [admin] [test002_cart.py(test10_check_selected_kinds_num:348)] - 测试购物车选中商品数量
2020-11-21 18:56:14,776 INFO [admin] [read_sql.py(read_sql:13)] - 读取navicat转储文件tp_cart2.sql，恢复表
2020-11-21 18:56:14,802 INFO [admin] [read_sql.py(read_sql:40)] - 数据库初始化恢复成功！
2020-11-21 18:56:14,842 INFO [admin] [test002_cart.py(test11_check_total_price:374)] - 测试购物车总价
2020-11-21 18:56:14,846 INFO [admin] [test002_cart.py(test11_check_total_price:376)] - 正在进行断言购物车总价
2020-11-21 18:56:14,848 INFO [admin] [base.py(base_get_text:43)] - 获取元素('css selector', '#total_fee')的文本信息
2020-11-21 18:56:14,848 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#total_fee')
2020-11-21 18:56:14,850 ERROR [admin] [test002_cart.py(test11_check_total_price:379)] - 取消选择后商品数量错误,断言失败:Message: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=85.0.4183.102)

2020-11-21 18:56:14,851 INFO [admin] [base.py(base_get_screenshot:53)] - 正在截图,截图为C:\Users\bty\Desktop\实战阶段资料\Web项目\WEB自动化测试用例代码\WEB项目自动化代码\image\test002_cart-2020_11_21 18_56_14.png
2020-11-21 18:56:14,937 INFO [admin] [test002_cart.py(test12_check_goodsname_go_to_detail:399)] - 测试点击商品名称是否会跳转
2020-11-21 18:56:14,939 INFO [admin] [base.py(base_click_element:30)] - 点击元素('partial link text', 'CNUTI粤通国际珠宝 黄金首饰 足金花生吊坠 男女同款 宝宝礼物 约1.25克左右')
2020-11-21 18:56:14,939 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', 'CNUTI粤通国际珠宝 黄金首饰 足金花生吊坠 男女同款 宝宝礼物 约1.25克左右')
2020-11-21 18:56:15,030 INFO [admin] [test002_cart.py(test13_check_picture_go_to_detail:414)] - 测试点击商品图片是否会跳转
2020-11-21 18:56:15,060 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.wi63')
2020-11-21 18:56:15,061 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.wi63')
2020-11-21 18:56:15,247 INFO [admin] [test002_cart.py(test14_go_to_pay:386)] - 测试生成订单
2020-11-21 18:56:17,249 INFO [admin] [base.py(base_click_element:30)] - 点击元素('link text', '去结算')
2020-11-21 18:56:17,249 INFO [admin] [base.py(base_find_element:24)] - 查找元素('link text', '去结算')
2020-11-21 18:56:17,322 INFO [admin] [get_driver.py(quit_web_driver:24)] - 关闭火狐浏览器驱动，并置空
2020-11-21 18:56:19,479 INFO [admin] [server_bat.py(__init__:14)] - 连接远程计算机，ip192.168.128.128,用户名bian,密码123456
2020-11-21 18:56:19,480 INFO [admin] [server_bat.py(run_bat_file:32)] - 执行命令：文件clear_session.bat，清理服务器缓存
2020-11-21 18:56:19,590 INFO [admin] [get_driver.py(get_web_driver:14)] - 火狐浏览器驱动
2020-11-21 19:47:42,363 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件register.yaml
2020-11-21 19:47:42,368 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件register_email.yaml
2020-11-21 19:47:42,377 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_huasheng_number.yaml
2020-11-21 19:47:42,378 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_huasheng_number1.yaml
2020-11-21 19:47:42,379 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_goods_kinds_num.yaml
2020-11-21 19:47:42,381 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_cut_btn.yaml
2020-11-21 19:47:42,382 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件cart_add_btn.yaml
2020-11-21 19:47:42,382 INFO [admin] [read_yaml_sigle.py(read_yaml_sigle:12)] - 读取单个参数列表的，参数化文件cart_sub_price.yaml
2020-11-21 19:47:42,386 INFO [admin] [read_yaml.py(read_yaml:12)] - 读取参数化文件login11.yaml
2020-11-21 19:47:42,398 INFO [admin] [server_bat.py(__init__:14)] - 连接远程计算机，ip192.168.128.128,用户名bian,密码123456
2020-11-21 19:47:42,398 INFO [admin] [server_bat.py(run_bat_file:32)] - 执行命令：文件clear_session.bat，清理服务器缓存
2020-11-21 19:47:42,542 INFO [admin] [get_driver.py(get_web_driver:14)] - 火狐浏览器驱动
2020-11-21 19:47:49,535 INFO [admin] [base.py(__init__:19)] - 正在初始化driver对象<selenium.webdriver.chrome.webdriver.WebDriver (session="11dddeb4e8706e21e6abb3c307ff94c0")>
2020-11-21 19:47:49,536 INFO [admin] [page_login.py(page_login:65)] - 调用组合业务登录方法，登录用户名为1234@qq.com,密码123456,验证码8888
2020-11-21 19:47:49,536 INFO [admin] [base.py(base_click_element:30)] - 点击元素('partial link text', '登录')
2020-11-21 19:47:49,537 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', '登录')
2020-11-21 19:47:53,844 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#username')，输入1234@qq.com
2020-11-21 19:47:53,845 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#username')
2020-11-21 19:47:53,854 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#username')
2020-11-21 19:47:53,902 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#password')，输入123456
2020-11-21 19:47:53,903 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#password')
2020-11-21 19:47:53,910 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#password')
2020-11-21 19:47:53,965 INFO [admin] [base.py(base_input_text:35)] - 在元素('css selector', '#verify_code')，输入8888
2020-11-21 19:47:53,966 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '#verify_code')
2020-11-21 19:47:53,974 INFO [admin] [base.py(base_input_text:37)] - 情况元素('css selector', '#verify_code')
2020-11-21 19:47:54,023 INFO [admin] [base.py(base_click_element:30)] - 点击元素('css selector', '.J-login-submit')
2020-11-21 19:47:54,024 INFO [admin] [base.py(base_find_element:24)] - 查找元素('css selector', '.J-login-submit')
2020-11-21 19:47:54,059 INFO [admin] [page_login.py(page_if_success:39)] - 判断是否登录成功
2020-11-21 19:47:54,060 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', '安全退出')
2020-11-21 19:48:00,956 INFO [admin] [page_login.py(page_if_success:47)] - 登录成功，返回True
2020-11-21 19:48:00,957 INFO [admin] [test003_login.py(test_login:52)] - 未登录成功
2020-11-21 19:48:00,957 INFO [admin] [test003_login.py(test_login:54)] - 正在进行断言
2020-11-21 19:48:00,957 INFO [admin] [base.py(base_get_text:43)] - 获取元素('partial link text', '安全退出')的文本信息
2020-11-21 19:48:00,957 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', '安全退出')
2020-11-21 19:48:03,973 INFO [admin] [test003_login.py(test_login:62)] - 正在登出
2020-11-21 19:48:03,973 INFO [admin] [base.py(base_click_element:30)] - 点击元素('partial link text', '安全退出')
2020-11-21 19:48:03,974 INFO [admin] [base.py(base_find_element:24)] - 查找元素('partial link text', '安全退出')
2020-11-21 19:48:10,544 INFO [admin] [get_driver.py(quit_web_driver:24)] - 关闭火狐浏览器驱动，并置空
